<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.cst.service.dao.ShopFinancialMapper">

	<resultMap id="ShopFinancialMap" type="com.cst.service.model.ShopFinancial">
        <result property="shopFinancialId" column="shop_financial_id"/>
        <result property="province" column="province"/>
        <result property="city" column="city"/>
        <result property="district" column="district"/>
        <result property="street" column="street"/>
        <result property="shopId" column="shop_id"/>
        <result property="day" column="day"/>
        <result property="createDate" column="create_date"/>
        <result property="status" column="status"/>
        <result property="shopName" column="shop_name"/>
        <result property="payType" column="pay_type"/>
        <result property="moneyWd" column="money_wd"/>
        <result property="amount" column="amount"/>
        <result property="code" column="code"/>
        <result property="transferDate" column="transfer_date"/>
        <result property="transferUser" column="transfer_user"/>
	</resultMap>
	<!-- 分页查询接口 -->
	<select id="getShopFinancialListPage" parameterType="ShopFinancial"
		resultMap="ShopFinancialMap">
		select * from shop_financial
		
		where
		1=1
		<if test="shopName!=null and shopName!=''">
		 and shop_name like CONCAT('%',#{shopName},'%' )
		 </if>
		 
		 <if test="district!=null and district!='' ">
		 and district = #{district}
		 </if>
		 
		 <if test="status!=null and status!='' and status!=100">
		 and status = #{status}
		 </if>
		 
		 <if test="status!=null and status!='' and status==100">
		 and status = 0
		 </if>
		 
		 <if test="beginTime!=null and beginTime!=''">
		 and day >= #{beginTime}
		 </if>
		 
		 <if test="endTime!=null and endTime!=''">
		 and day &lt;= #{endTime}
		 </if>
		 
		 order by shop_financial_id desc
		 
	</select>
	
	<select id="getShopFinancialSvcAllListPage" parameterType="ShopFinancial"
		resultMap="ShopFinancialMap">
		select 
		
		day as day,
		create_date as create_date,
		shop_name as shop_name,
		code as code,
		transfer_date as transfer_date,
		sum(amount) as amount
		 
		from shop_financial
		
		where
		shop_id=#{shopId}
		 
		 <if test="beginTime!=null and beginTime!=''">
		 and day >= #{beginTime}
		 </if>
		 
		 <if test="endTime!=null and endTime!=''">
		 and day &lt;= #{endTime}
		 </if>
		 
		 group by day
		 
		 order by shop_financial_id desc
	</select>
	
	<select id="getShopFinancialSvcListPage" parameterType="ShopFinancial"
		resultMap="ShopFinancialMap">
		select * from shop_financial
		
		where
		shop_id=#{shopId}
		 
		  <if test="status!=null and status!='' and status!=100">
		 and status = #{status}
		 </if>
		 
		 <if test="status!=null and status!='' and status==100">
		 and status = 0
		 </if>
		 
		 <if test="beginTime!=null and beginTime!=''">
		 and day >= #{beginTime}
		 </if>
		 
		 <if test="endTime!=null and endTime!=''">
		 and day &lt;= #{endTime}
		 </if>
		 
		 order by shop_financial_id desc
	</select>
	
	<!-- 按编号查询 -->
	<select id="getShopFinancialById" parameterType="int" resultMap="ShopFinancialMap">
		select *
		from shop_financial where shop_financial_id = #{shopFinancialId}
	</select>
	<!-- 添加 -->
	<insert id="insertShopFinancial" parameterType="ShopFinancial" >
        INSERT INTO shop_financial (
        province ,
        	city ,
        	district ,
        	street ,
        	code ,
        	shop_id ,
        	day ,
        	shop_name ,
        	amount ,
        	pay_type
        ) 
        
         
            
         SELECT sh.province AS province,sh.city AS city,sh.district AS district, sh.street AS street,sh.code AS CODE,sh.shop_id AS shop_id,DATE_SUB(CURDATE(),INTERVAL 1 DAY) AS DAY,sh.name AS shop_name,ord.amount AS amount,1 AS pay_type  
        FROM shop sh LEFT JOIN
        
         (SELECT od.shop_id AS shop_id,SUM(od.total_from_bdh) AS amount 
        FROM orders od
        WHERE 
        od.bdh_order_status = 'TRADE_SUCCESS'
        and od.pay_type = 1
         and od.pay_time &lt; CURDATE() 
         and od.pay_time>=DATE_SUB(CURDATE(),INTERVAL 1 DAY) 
         GROUP BY od.shop_id) ORD 
         
         ON ord.shop_id=sh.shop_id
	</insert>
	
	<insert id="insertShopFinancialForWx" parameterType="ShopFinancial" >
        INSERT INTO shop_financial (
        province ,
        	city ,
        	district ,
        	street ,
        	code ,
        	shop_id ,
        	day ,
        	shop_name ,
        	amount ,
        	pay_type
        ) 
        
         
            
         SELECT sh.province AS province,sh.city AS city,sh.district AS district, sh.street AS street,sh.code AS CODE,sh.shop_id AS shop_id,DATE_SUB(CURDATE(),INTERVAL 1 DAY) AS DAY,sh.name AS shop_name,ord.amount AS amount,2 AS pay_type  
        FROM shop sh LEFT JOIN
        
         (SELECT od.shop_id AS shop_id,SUM(od.total_from_bdh) AS amount 
        FROM orders od
        WHERE 
        od.bdh_order_status = 'TRADE_SUCCESS'
        and od.pay_type = 2
         and od.pay_time &lt; CURDATE() 
         and od.pay_time>=DATE_SUB(CURDATE(),INTERVAL 1 DAY) 
         GROUP BY od.shop_id) ORD 
         
         ON ord.shop_id=sh.shop_id
	</insert>
	
	<!-- 每日独代销售额 -->
	<insert id="insertShopAgentFinancial" parameterType="ShopFinancial" >
        INSERT INTO shop_agent_financial (
        agent_id,
        amount ,
        province ,
        	city ,
        	district ,
        	street ,
        	code ,
        	shop_id ,
        	day ,
        	shop_name 
        ) 
	
	SELECT  temp.`agent_id` AS agent_id,SUM(temp.amount) AS amount
         , temp.province AS province,temp.city AS city,temp.district AS district, temp.street AS street
         ,temp.code AS CODE,temp.shop_id AS shop_id,DATE_SUB(CURDATE(),INTERVAL 1 DAY) AS DAY
         ,temp.shop_name AS shop_name 

FROM

(SELECT  m.`manager_id` AS agent_id,SUM(od.total_from_bdh) AS amount 
         
          
         , sh.province AS province,sh.city AS city,sh.district AS district, sh.street AS street
         ,sh.code AS CODE,sh.shop_id AS shop_id
         ,sh.name AS shop_name 
         
         
         
         FROM `manager` m,`manager_role`  mr ,orders od,`agent_cfg` ac ,`agent_product_cfg` apc,
         shop sh 
         
         WHERE m.`manager_id`=mr.`manager_id` AND mr.`role_id`=9 AND od.`shop_id`=m.`shop_id`
         
         AND m.`shop_id`=sh.`shop_id` AND m.`status`=1
         
         AND ac.`agent_id`=m.`manager_id` AND ac.`agent_cfg_id`=apc.`agent_cfg_id`
         
         AND od.`product_uuid` = apc.`product_uuid` AND od.bdh_order_status = 'TRADE_SUCCESS'
         
         AND od.`pay_time` &lt; CURDATE() 
         AND od.pay_time>=DATE_SUB(CURDATE(),INTERVAL 1 DAY) 
         
         GROUP BY m.`manager_id`
         
         
	UNION ALL         
         
         SELECT  m.`manager_id` AS agent_id,SUM(odt.`capacity`*odt.`price`) AS amount
         , sh.province AS province,sh.city AS city,sh.district AS district, sh.street AS street
         ,sh.code AS CODE,sh.shop_id AS shop_id
         ,sh.name AS shop_name 
         
         
         
         FROM `manager` m,`manager_role`  mr ,orders od,`agent_cfg` ac ,`agent_product_cfg` apc,
         shop sh ,`orders_detail` odt
         
         WHERE m.`manager_id`=mr.`manager_id` AND mr.`role_id`=9 AND od.`shop_id`=m.`shop_id`
         
         AND odt.`code`=od.`code` AND od.`product_uuid`='0'
         
         AND m.`shop_id`=sh.`shop_id` AND m.`status`=1
         
         AND ac.`agent_id`=m.`manager_id` AND ac.`agent_cfg_id`=apc.`agent_cfg_id`
         
         AND odt.`product_uuid`= apc.`product_uuid` AND od.bdh_order_status = 'TRADE_SUCCESS'
         
         AND od.`pay_time` &lt; CURDATE() 
         AND od.pay_time>=DATE_SUB(CURDATE(),INTERVAL 1 DAY) 
         
         GROUP BY m.`manager_id`
         
         ) temp
         
         GROUP BY temp.`agent_id`
         
         
         </insert>
	
	
	
	
	
	<!-- 每日微代佣金收入 -->
	<insert id="insertWxAgentFinancial" parameterType="ShopFinancial" >
        INSERT INTO wx_agent_financial (
        	agent_id ,
        	amount ,
        	day
        ) 
        
         
            
        SELECT doub.agent_id as agent_id,SUM(doub.amount) AS amount,doub.DAY as day FROM
         
         (SELECT u.`agent_id` AS agent_id,SUM(apc.`price`*od.`capacity`) AS amount,DATE_SUB(CURDATE(),INTERVAL 1 DAY) AS DAY
         
         FROM `user` u ,`orders` o,`agent_cfg` ac ,`agent_product_cfg` apc,`orders_detail` od
         
         WHERE u.`status`=1 AND u.`bind_state`=1 AND ac.`type`=1 AND ac.`agent_cfg_id`=apc.`agent_cfg_id`
         
         AND u.`user_id`=o.`create_by_user` AND o.`status`=2 
         
         AND o.`product_uuid`='0'
         AND od.`code`=o.`code` 
         
         AND apc.`product_uuid`=od.`product_uuid`
         
         AND o.`create_date` > u.`bind_date`
         
         AND o.`sign_time` &lt; CURDATE() 
         AND o.sign_time>=DATE_SUB(CURDATE(),INTERVAL 1 DAY) 
         
         GROUP BY u.`agent_id`
         
         
         
         UNION ALL
         
         
          SELECT u.`agent_id`  AS agent_id,SUM(apc.`price`*o.`capacity`) AS amount,DATE_SUB(CURDATE(),INTERVAL 1 DAY) AS DAY
         
         FROM `user` u ,`orders` o,`agent_cfg` ac ,`agent_product_cfg` apc
         
         WHERE u.`status`=1 AND u.`bind_state`=1 AND ac.`type`=1 AND ac.`agent_cfg_id`=apc.`agent_cfg_id`
         
         AND u.`user_id`=o.`create_by_user` AND o.`status`=2 AND apc.`product_uuid`=o.`product_uuid`
         
         AND o.`create_date` > u.`bind_date`
         
         AND o.`sign_time` &lt; CURDATE() 
         AND o.sign_time>=DATE_SUB(CURDATE(),INTERVAL 1 DAY) 
         
         
         GROUP BY u.`agent_id`)  doub
         
         GROUP BY doub.agent_id
	</insert>
	
	
	
	
	<!-- 店每日支付微代佣金 -->
	<insert id="insertShopForWxagentFinancial" parameterType="ShopFinancial" >
        INSERT INTO shop_for_wxagent_financial (
        	shop_id ,
        	amount ,
        	day
        ) 
        
         
            
         SELECT doub.`shop_id` AS shop_id,SUM(doub.amount) AS amount,doub.DAY AS DAY FROM
         
         (SELECT o.`shop_id` AS shop_id,SUM(apc.`price`*od.`capacity`) AS amount,DATE_SUB(CURDATE(),INTERVAL 1 DAY) AS DAY
         
         FROM `user` u ,`orders` o,`agent_cfg` ac ,`agent_product_cfg` apc,`orders_detail` od
         
         WHERE u.`status`=1 AND u.`bind_state`=1 AND ac.`type`=1 AND ac.`agent_cfg_id`=apc.`agent_cfg_id`
         
         AND u.`user_id`=o.`create_by_user` AND o.`status`=2 
         
         AND o.`product_uuid`='0'
         AND od.`code`=o.`code` 
         
         AND apc.`product_uuid`=od.`product_uuid`
         
         AND o.`create_date` > u.`bind_date`
         
         AND o.`sign_time` &lt; CURDATE() 
         AND o.sign_time>=DATE_SUB(CURDATE(),INTERVAL 1 DAY) 
         
         GROUP BY o.`shop_id`
         
         
         
         UNION ALL
         
         
          SELECT o.`shop_id` AS shop_id,SUM(apc.`price`*o.`capacity`) AS amount,DATE_SUB(CURDATE(),INTERVAL 1 DAY) AS DAY
         
         FROM `user` u ,`orders` o,`agent_cfg` ac ,`agent_product_cfg` apc
         
         WHERE u.`status`=1 AND u.`bind_state`=1 AND ac.`type`=1 AND ac.`agent_cfg_id`=apc.`agent_cfg_id`
         
         AND u.`user_id`=o.`create_by_user` AND o.`status`=2 AND apc.`product_uuid`=o.`product_uuid`
         
         AND o.`create_date` > u.`bind_date`
         
         AND o.`sign_time` &lt; CURDATE() 
         AND o.sign_time>=DATE_SUB(CURDATE(),INTERVAL 1 DAY) 
         
         
         GROUP BY o.`shop_id`)  doub
         
         GROUP BY doub.`shop_id`
	</insert>
	
	
	
	
	
	<!-- 修改 -->
	<update id="updateShopFinancial" >
        UPDATE shop_financial 
        <trim prefix="SET" suffixOverrides=",">
	        status = #{status},
	        <if test="transferDateStr!=null and transferDateStr!=''">
	        transfer_date = #{transferDateStr},
	        </if>
	        
	        <if test="transferDateStr==''">
	        transfer_date = null,
	        </if>
	        <if test="transferUser!=null">
	        transfer_user = #{transferUser},
	        </if>
	      </trim>  
        WHERE 
	        shop_financial_id in (${shopFinancialIdStr})
	</update>
	<!-- 删除 -->
	<delete id="deleteShopFinancial" parameterType="int">
        UPDATE shop_financial set state='X' WHERE
        shop_financial_id = #{shopFinancialId} 
    </delete>
	
</mapper>

